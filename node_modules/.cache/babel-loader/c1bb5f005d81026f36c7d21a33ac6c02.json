{"ast":null,"code":"import _defineProperty from \"/Users/Rob/Downloads/kei-rob-trelloyes-master 2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Rob/Downloads/kei-rob-trelloyes-master 2/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport './App.css';\nimport React, { Component } from 'react';\nimport STORE from './store';\nimport List from './List';\n\nconst newRandomCard = () => {\n  const id = Math.random().toString(36).substring(2, 4) + Math.random().toString(36).substring(2, 4);\n  return {\n    id,\n    title: \"Random Card {$id}\",\n    content: 'lorem ipsum'\n  };\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lists: this.props.store.lists,\n      allCards: this.props.store.allCards\n    };\n\n    this.handleDelete = (listId, cardId) => {\n      const lists = this.state.lists.map(list => {\n        list.cardIds = list.cardIds.filter(id => id !== cardId);\n        return list;\n      });\n      const allCards = Object.entries(this.state.allCards).reduce((newObj, [key, value]) => key === cardId ? newObj : _objectSpread({}, newObj, {\n        [key]: value\n      }), {});\n      this.setState({\n        lists,\n        allCards\n      });\n    };\n\n    this.addRandomCard = listId => {\n      const lists = this.state.lists;\n      const listIdx = lists.findIndex(list => list.id === listId);\n      const list = lists[listIdx];\n      const newCard = newRandomCard();\n      list.cardIds.push(newCard.id);\n      lists.splice(listIdx, 1, list);\n      this.setState({\n        lists,\n        allCards: _objectSpread({}, this.state.allCards, {\n          [newCard.id]: newCard\n        })\n      });\n    };\n  }\n\n  render() {\n    const store = this.state;\n    return React.createElement(\"main\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Trelloyes!\")), React.createElement(\"div\", {\n      className: \"App-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, store.lists.map(list => React.createElement(List, {\n      key: list.id,\n      id: list.id,\n      header: list.header,\n      cards: list.cardIds.map(id => store.allCards[id]),\n      handleDelete: this.handleDelete,\n      addRandomCard: this.addRandomCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nApp.defaultProps = {\n  store: {\n    lists: [],\n    allCards: {}\n  }\n};\nexport default App;","map":{"version":3,"sources":["/Users/Rob/Downloads/kei-rob-trelloyes-master 2/src/App.js"],"names":["React","Component","STORE","List","newRandomCard","id","Math","random","toString","substring","title","content","App","state","lists","props","store","allCards","handleDelete","listId","cardId","map","list","cardIds","filter","Object","entries","reduce","newObj","key","value","setState","addRandomCard","listIdx","findIndex","newCard","push","splice","render","header","defaultProps"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport STORE from './store';\nimport List from './List';\n\nconst newRandomCard = () => {\n  const id = Math.random().toString(36).substring(2, 4) + Math.random().toString(36).substring(2, 4);\n  return {\n    id,\n    title: `Random Card {$id}`,\n    content: 'lorem ipsum'\n  }\n}\n\nclass App extends Component {\n  static defaultProps = {\n    store: {\n      lists: [],\n      allCards: {},\n    }\n  };\n  \n  state = {\n    lists: this.props.store.lists,\n    allCards: this.props.store.allCards\n  }\n\n  handleDelete = (listId, cardId) => {\n    const lists = this.state.lists.map(list => {\n      list.cardIds = list.cardIds.filter(id => id !== cardId)\n      return list\n    })\n    const allCards = Object.entries(this.state.allCards).reduce(\n      (newObj, [key, value]) =>\n        key === cardId ? newObj : {...newObj, [key]: value},\n        {}\n    )\n    this.setState(\n      {\n        lists,\n        allCards\n      }\n    )\n  }\n\n  addRandomCard = (listId) => {\n    const lists = this.state.lists\n    const listIdx = lists.findIndex(list => list.id === listId)\n    const list = lists[listIdx]\n\n    const newCard = newRandomCard();\n\n    list.cardIds.push(newCard.id)\n    lists.splice(listIdx, 1, list)\n\n    this.setState({\n      lists,\n      allCards : {\n        ...this.state.allCards,\n        [newCard.id]: newCard\n      }\n    })\n  }\n\n  render() {\n    const store = this.state\n    return (\n      <main className='App'>\n        <header className='App-header'>\n          <h1>Trelloyes!</h1>\n        </header>\n        <div className='App-list'>\n          {store.lists.map(list => (\n            <List\n              key={list.id}\n              id={list.id}\n              header={list.header}\n              cards={list.cardIds.map(id => store.allCards[id])}\n              handleDelete={this.handleDelete}\n              addRandomCard={this.addRandomCard}\n            />\n          ))}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}